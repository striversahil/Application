import React from 'react';
import { EditorProps } from '@monaco-editor/react';
import { Document } from '../../models';
export interface CodeiumEditorProps extends EditorProps {
    language: string;
    apiKey?: string;
    /**
     * Optional callback to detect when completions are accepted. Includes the accepted text for the completion.
     */
    onAutocomplete?: (acceptedText: string) => void;
    /**
     * Optional address of the Language Server. This should not be needed for most use cases. Defaults
     * to Codeium's language server.
     */
    languageServerAddress?: string;
    /**
     * Optional list of other documents in the workspace. This can be used to provide additional
     * context to Codeium beyond simply the current document. There is a limit of 10 medium sized
     * documents.
     */
    otherDocuments?: Document[];
    /**
     * Optional classname for the container.
     */
    containerClassName?: string;
    /**
     * Optional styles for the container.
     */
    containerStyle?: React.CSSProperties;
    /**
     * Optional multiline model threshold. Should not be needed for most use cases.
     * Numerical value between 0-1, higher = more single line, lower = more multiline,
     * 0.0 = only_multiline.
     */
    multilineModelThreshold?: number;
}
/**
 * Code editor that enables Codeium AI suggestions in the editor.
 * The layout by default is width = 100% and height = 300px. These values can be overridden by passing in a string value to the width and/or height props.
 */
export declare const CodeiumEditor: React.FC<CodeiumEditorProps>;
