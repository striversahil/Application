import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
/**
 * @generated from enum exa.codeium_common_pb.ExperimentKey
 */
export declare enum ExperimentKey {
    /**
     * @generated from enum value: UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from enum value: JUPYTER_FORMAT = 77;
     */
    JUPYTER_FORMAT = 77
}
/**
 * Authentication source for users on the cloud service.
 *
 * @generated from enum exa.codeium_common_pb.AuthSource
 */
export declare enum AuthSource {
    /**
     * @generated from enum value: AUTH_SOURCE_CODEIUM = 0;
     */
    CODEIUM = 0
}
/**
 * @generated from enum exa.codeium_common_pb.EventType
 */
export declare enum EventType {
    /**
     * @generated from enum value: EVENT_TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from enum value: EVENT_TYPE_ENABLE_CODEIUM = 1;
     */
    ENABLE_CODEIUM = 1,
    /**
     * @generated from enum value: EVENT_TYPE_DISABLE_CODEIUM = 2;
     */
    DISABLE_CODEIUM = 2,
    /**
     * @generated from enum value: EVENT_TYPE_SHOW_PREVIOUS_COMPLETION = 3;
     */
    SHOW_PREVIOUS_COMPLETION = 3,
    /**
     * @generated from enum value: EVENT_TYPE_SHOW_NEXT_COMPLETION = 4;
     */
    SHOW_NEXT_COMPLETION = 4
}
/**
 * @generated from enum exa.codeium_common_pb.CompletionSource
 */
export declare enum CompletionSource {
    /**
     * @generated from enum value: COMPLETION_SOURCE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from enum value: COMPLETION_SOURCE_TYPING_AS_SUGGESTED = 1;
     */
    TYPING_AS_SUGGESTED = 1,
    /**
     * @generated from enum value: COMPLETION_SOURCE_CACHE = 2;
     */
    CACHE = 2,
    /**
     * @generated from enum value: COMPLETION_SOURCE_NETWORK = 3;
     */
    NETWORK = 3
}
/**
 * Every time this list is updated, we should be redeploying the API server
 * since it uses the string representation for BQ.
 *
 * @generated from enum exa.codeium_common_pb.Language
 */
export declare enum Language {
    /**
     * @generated from enum value: LANGUAGE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from enum value: LANGUAGE_C = 1;
     */
    C = 1,
    /**
     * @generated from enum value: LANGUAGE_CLOJURE = 2;
     */
    CLOJURE = 2,
    /**
     * @generated from enum value: LANGUAGE_COFFEESCRIPT = 3;
     */
    COFFEESCRIPT = 3,
    /**
     * @generated from enum value: LANGUAGE_CPP = 4;
     */
    CPP = 4,
    /**
     * @generated from enum value: LANGUAGE_CSHARP = 5;
     */
    CSHARP = 5,
    /**
     * @generated from enum value: LANGUAGE_CSS = 6;
     */
    CSS = 6,
    /**
     * @generated from enum value: LANGUAGE_CUDACPP = 7;
     */
    CUDACPP = 7,
    /**
     * @generated from enum value: LANGUAGE_DOCKERFILE = 8;
     */
    DOCKERFILE = 8,
    /**
     * @generated from enum value: LANGUAGE_GO = 9;
     */
    GO = 9,
    /**
     * @generated from enum value: LANGUAGE_GROOVY = 10;
     */
    GROOVY = 10,
    /**
     * @generated from enum value: LANGUAGE_HANDLEBARS = 11;
     */
    HANDLEBARS = 11,
    /**
     * @generated from enum value: LANGUAGE_HASKELL = 12;
     */
    HASKELL = 12,
    /**
     * @generated from enum value: LANGUAGE_HCL = 13;
     */
    HCL = 13,
    /**
     * @generated from enum value: LANGUAGE_HTML = 14;
     */
    HTML = 14,
    /**
     * @generated from enum value: LANGUAGE_INI = 15;
     */
    INI = 15,
    /**
     * @generated from enum value: LANGUAGE_JAVA = 16;
     */
    JAVA = 16,
    /**
     * @generated from enum value: LANGUAGE_JAVASCRIPT = 17;
     */
    JAVASCRIPT = 17,
    /**
     * @generated from enum value: LANGUAGE_JSON = 18;
     */
    JSON = 18,
    /**
     * @generated from enum value: LANGUAGE_JULIA = 19;
     */
    JULIA = 19,
    /**
     * @generated from enum value: LANGUAGE_KOTLIN = 20;
     */
    KOTLIN = 20,
    /**
     * @generated from enum value: LANGUAGE_LATEX = 21;
     */
    LATEX = 21,
    /**
     * @generated from enum value: LANGUAGE_LESS = 22;
     */
    LESS = 22,
    /**
     * @generated from enum value: LANGUAGE_LUA = 23;
     */
    LUA = 23,
    /**
     * @generated from enum value: LANGUAGE_MAKEFILE = 24;
     */
    MAKEFILE = 24,
    /**
     * @generated from enum value: LANGUAGE_MARKDOWN = 25;
     */
    MARKDOWN = 25,
    /**
     * @generated from enum value: LANGUAGE_OBJECTIVEC = 26;
     */
    OBJECTIVEC = 26,
    /**
     * @generated from enum value: LANGUAGE_OBJECTIVECPP = 27;
     */
    OBJECTIVECPP = 27,
    /**
     * @generated from enum value: LANGUAGE_PERL = 28;
     */
    PERL = 28,
    /**
     * @generated from enum value: LANGUAGE_PHP = 29;
     */
    PHP = 29,
    /**
     * @generated from enum value: LANGUAGE_PLAINTEXT = 30;
     */
    PLAINTEXT = 30,
    /**
     * @generated from enum value: LANGUAGE_PROTOBUF = 31;
     */
    PROTOBUF = 31,
    /**
     * @generated from enum value: LANGUAGE_PBTXT = 32;
     */
    PBTXT = 32,
    /**
     * @generated from enum value: LANGUAGE_PYTHON = 33;
     */
    PYTHON = 33,
    /**
     * @generated from enum value: LANGUAGE_R = 34;
     */
    R = 34,
    /**
     * @generated from enum value: LANGUAGE_RUBY = 35;
     */
    RUBY = 35,
    /**
     * @generated from enum value: LANGUAGE_RUST = 36;
     */
    RUST = 36,
    /**
     * @generated from enum value: LANGUAGE_SASS = 37;
     */
    SASS = 37,
    /**
     * @generated from enum value: LANGUAGE_SCALA = 38;
     */
    SCALA = 38,
    /**
     * @generated from enum value: LANGUAGE_SCSS = 39;
     */
    SCSS = 39,
    /**
     * @generated from enum value: LANGUAGE_SHELL = 40;
     */
    SHELL = 40,
    /**
     * @generated from enum value: LANGUAGE_SQL = 41;
     */
    SQL = 41,
    /**
     * @generated from enum value: LANGUAGE_STARLARK = 42;
     */
    STARLARK = 42,
    /**
     * @generated from enum value: LANGUAGE_SWIFT = 43;
     */
    SWIFT = 43,
    /**
     * @generated from enum value: LANGUAGE_TSX = 44;
     */
    TSX = 44,
    /**
     * @generated from enum value: LANGUAGE_TYPESCRIPT = 45;
     */
    TYPESCRIPT = 45,
    /**
     * @generated from enum value: LANGUAGE_VISUALBASIC = 46;
     */
    VISUALBASIC = 46,
    /**
     * @generated from enum value: LANGUAGE_VUE = 47;
     */
    VUE = 47,
    /**
     * @generated from enum value: LANGUAGE_XML = 48;
     */
    XML = 48,
    /**
     * @generated from enum value: LANGUAGE_XSL = 49;
     */
    XSL = 49,
    /**
     * @generated from enum value: LANGUAGE_YAML = 50;
     */
    YAML = 50,
    /**
     * @generated from enum value: LANGUAGE_SVELTE = 51;
     */
    SVELTE = 51,
    /**
     * @generated from enum value: LANGUAGE_TOML = 52;
     */
    TOML = 52,
    /**
     * @generated from enum value: LANGUAGE_DART = 53;
     */
    DART = 53,
    /**
     * @generated from enum value: LANGUAGE_RST = 54;
     */
    RST = 54,
    /**
     * @generated from enum value: LANGUAGE_OCAML = 55;
     */
    OCAML = 55,
    /**
     * @generated from enum value: LANGUAGE_CMAKE = 56;
     */
    CMAKE = 56,
    /**
     * @generated from enum value: LANGUAGE_PASCAL = 57;
     */
    PASCAL = 57,
    /**
     * @generated from enum value: LANGUAGE_ELIXIR = 58;
     */
    ELIXIR = 58,
    /**
     * @generated from enum value: LANGUAGE_FSHARP = 59;
     */
    FSHARP = 59,
    /**
     * @generated from enum value: LANGUAGE_LISP = 60;
     */
    LISP = 60,
    /**
     * @generated from enum value: LANGUAGE_MATLAB = 61;
     */
    MATLAB = 61,
    /**
     * @generated from enum value: LANGUAGE_POWERSHELL = 62;
     */
    POWERSHELL = 62,
    /**
     * @generated from enum value: LANGUAGE_SOLIDITY = 63;
     */
    SOLIDITY = 63,
    /**
     * @generated from enum value: LANGUAGE_ADA = 64;
     */
    ADA = 64,
    /**
     * @generated from enum value: LANGUAGE_OCAML_INTERFACE = 65;
     */
    OCAML_INTERFACE = 65
}
/**
 * Next ID: 12, Previous field: entropy.
 *
 * @generated from message exa.codeium_common_pb.Completion
 */
export declare class Completion extends Message<Completion> {
    /**
     * @generated from field: string completion_id = 1;
     */
    completionId: string;
    /**
     * @generated from field: string text = 2;
     */
    text: string;
    /**
     * @generated from field: string prefix = 3;
     */
    prefix: string;
    /**
     * @generated from field: string stop = 4;
     */
    stop: string;
    /**
     * @generated from field: double score = 5;
     */
    score: number;
    /**
     * @generated from field: repeated uint64 tokens = 6;
     */
    tokens: bigint[];
    /**
     * @generated from field: repeated string decoded_tokens = 7;
     */
    decodedTokens: string[];
    /**
     * @generated from field: repeated double probabilities = 8;
     */
    probabilities: number[];
    /**
     * @generated from field: repeated double adjusted_probabilities = 9;
     */
    adjustedProbabilities: number[];
    /**
     * @generated from field: uint64 generated_length = 10;
     */
    generatedLength: bigint;
    constructor(data?: PartialMessage<Completion>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "exa.codeium_common_pb.Completion";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Completion;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Completion;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Completion;
    static equals(a: Completion | PlainMessage<Completion> | undefined, b: Completion | PlainMessage<Completion> | undefined): boolean;
}
/**
 * Next ID: 15, Previous field: url.
 *
 * @generated from message exa.codeium_common_pb.Metadata
 */
export declare class Metadata extends Message<Metadata> {
    /**
     * @generated from field: string ide_name = 1;
     */
    ideName: string;
    /**
     * @generated from field: string ide_version = 7;
     */
    ideVersion: string;
    /**
     * @generated from field: string extension_name = 12;
     */
    extensionName: string;
    /**
     * @generated from field: string extension_version = 2;
     */
    extensionVersion: string;
    /**
     * @generated from field: string api_key = 3;
     */
    apiKey: string;
    /**
     * Regex derived from https://stackoverflow.com/a/48300605.
     * TODO(prem): Should this be mandatory?
     *
     * @generated from field: string locale = 4;
     */
    locale: string;
    /**
     * UID identifying a single session for the given user.
     *
     * @generated from field: string session_id = 10;
     */
    sessionId: string;
    /**
     * Used purely in language server to cancel in flight requests.
     * If request_id is 0, then the request is not cancelable.
     * This should be a strictly monotonically increasing number
     * for the duration of a session.
     *
     * @generated from field: uint64 request_id = 9;
     */
    requestId: bigint;
    /**
     * Browser-specific information.
     *
     * @generated from field: string user_agent = 13;
     */
    userAgent: string;
    /**
     * @generated from field: string url = 14;
     */
    url: string;
    /**
     * Authentication source information.
     *
     * @generated from field: exa.codeium_common_pb.AuthSource auth_source = 15;
     */
    authSource: AuthSource;
    constructor(data?: PartialMessage<Metadata>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "exa.codeium_common_pb.Metadata";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Metadata;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Metadata;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Metadata;
    static equals(a: Metadata | PlainMessage<Metadata> | undefined, b: Metadata | PlainMessage<Metadata> | undefined): boolean;
}
/**
 * Next ID: 3, Previous field: insert_spaces.
 *
 * @generated from message exa.codeium_common_pb.EditorOptions
 */
export declare class EditorOptions extends Message<EditorOptions> {
    /**
     * @generated from field: uint64 tab_size = 1;
     */
    tabSize: bigint;
    /**
     * @generated from field: bool insert_spaces = 2;
     */
    insertSpaces: boolean;
    constructor(data?: PartialMessage<EditorOptions>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "exa.codeium_common_pb.EditorOptions";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EditorOptions;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EditorOptions;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EditorOptions;
    static equals(a: EditorOptions | PlainMessage<EditorOptions> | undefined, b: EditorOptions | PlainMessage<EditorOptions> | undefined): boolean;
}
/**
 * @generated from message exa.codeium_common_pb.Event
 */
export declare class Event extends Message<Event> {
    /**
     * @generated from field: exa.codeium_common_pb.EventType event_type = 1;
     */
    eventType: EventType;
    /**
     * @generated from field: string event_json = 2;
     */
    eventJson: string;
    /**
     * @generated from field: int64 timestamp_unix_ms = 3;
     */
    timestampUnixMs: bigint;
    constructor(data?: PartialMessage<Event>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "exa.codeium_common_pb.Event";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Event;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Event;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Event;
    static equals(a: Event | PlainMessage<Event> | undefined, b: Event | PlainMessage<Event> | undefined): boolean;
}
