"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/project/[appId]/edit/page",{

/***/ "(app-pages-browser)/./hooks/useMutation.ts":
/*!******************************!*\
  !*** ./hooks/useMutation.ts ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMutationData: () => (/* binding */ useMutationData),\n/* harmony export */   useMutationDataState: () => (/* binding */ useMutationDataState)\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useMutation.js\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useMutationState.js\");\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\n\n\nconst useMutationData = (mutationKey, mutationFn, queryKey, OptimisticFn, onSuccess)=>{\n    // Creating a query client for Mutation\n    const client = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQueryClient)();\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_2__.useMutation)({\n        mutationKey,\n        mutationFn,\n        onMutate: {\n            \"useMutationData.useMutation\": async (variables)=>{\n                await client.cancelQueries({\n                    queryKey: queryKey,\n                    exact: true\n                });\n                // Optimistic update to the cache\n                const previousData = client.getQueryData([\n                    queryKey[0]\n                ]);\n                client.setQueryData([\n                    queryKey[0]\n                ], OptimisticFn ? OptimisticFn(previousData, variables) : ({\n                    \"useMutationData.useMutation\": (previousData, variables)=>({\n                            ...previousData,\n                            ...variables\n                        })\n                })[\"useMutationData.useMutation\"]);\n                return {\n                    variables,\n                    previousData\n                };\n            }\n        }[\"useMutationData.useMutation\"],\n        // onError: (error, variables, context) => {\n        //   client.setQueryData([queryKey], context?.previousData);\n        // },\n        onSuccess (data) {\n            if (onSuccess) onSuccess(); // Calling onSuccess if provided\n            else {\n                return (0,sonner__WEBPACK_IMPORTED_MODULE_0__.toast)(\"Success\", {\n                    description: JSON.stringify(data)\n                });\n            }\n        },\n        onSettled: {\n            \"useMutationData.useMutation\": ()=>{\n                queryKey.forEach({\n                    \"useMutationData.useMutation\": (query)=>{\n                        client.invalidateQueries({\n                            queryKey: [\n                                query\n                            ],\n                            exact: true\n                        });\n                    }\n                }[\"useMutationData.useMutation\"]);\n            }\n        }[\"useMutationData.useMutation\"]\n    });\n};\n// Example usage\n// const { mutate, isPending } = useMutationData(\n//   [\"updateUser\"], // mutationKey\n//   updateUserApi, // mutationFn\n//   \"userData\", // queryKey to invalidate  i.e. forcing the a refetch to useData hook\n//   () => console.log(\"User updated successfully!\") // onSuccess callback\n// );\n// // Trigger the mutation\n// mutate({ id: 1, name: \"John Doe\" });\n/**\n * useMutationDataState\n *\n * This hook will return the latest variables and status of the given mutation key.\n *\n * @param {string} mutationKey - The key of the mutation to monitor\n * @returns {Object} - An object containing the latest variables and status of the mutation\n */ const useMutationDataState = (mutationKey)=>{\n    const data = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_3__.useMutationState)({\n        filters: {\n            mutationKey\n        },\n        select: {\n            \"useMutationDataState.useMutationState[data]\": (mutation)=>{\n                return {\n                    variables: mutation.state.variables,\n                    status: mutation.state.status\n                };\n            }\n        }[\"useMutationDataState.useMutationState[data]\"]\n    });\n    const latestVariables = data[data.length - 1];\n    return {\n        latestVariables\n    };\n}; // Example usage\n // const { latestVariables } = useMutationDataState([\"updateUser\"]);\n // console.log(latestVariables); // { id: 1, name: \"John Doe\" }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZU11dGF0aW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQU8rQjtBQUNBO0FBRXhCLE1BQU1JLGtCQUFrQixDQUM3QkMsYUFDQUMsWUFDQUMsVUFDQUMsY0FDQUM7SUFFQSx1Q0FBdUM7SUFDdkMsTUFBTUMsU0FBU1IscUVBQWNBO0lBQzdCLE9BQU9GLGtFQUFXQSxDQUFDO1FBQ2pCSztRQUNBQztRQUNBSyxRQUFROzJDQUFFLE9BQU9DO2dCQUNmLE1BQU1GLE9BQU9HLGFBQWEsQ0FBQztvQkFDekJOLFVBQVVBO29CQUNWTyxPQUFPO2dCQUNUO2dCQUNBLGlDQUFpQztnQkFDakMsTUFBTUMsZUFBZUwsT0FBT00sWUFBWSxDQUFDO29CQUFDVCxRQUFRLENBQUMsRUFBRTtpQkFBQztnQkFDdERHLE9BQU9PLFlBQVksQ0FDakI7b0JBQUNWLFFBQVEsQ0FBQyxFQUFFO2lCQUFDLEVBQ2JDLGVBQ0lBLGFBQWFPLGNBQWNIO21EQUMzQixDQUFDRyxjQUFtQkgsWUFBb0I7NEJBQ3RDLEdBQUdHLFlBQVk7NEJBQ2YsR0FBR0gsU0FBUzt3QkFDZDs7Z0JBRU4sT0FBTztvQkFBRUE7b0JBQVdHO2dCQUFhO1lBQ25DOztRQUVBLDRDQUE0QztRQUM1Qyw0REFBNEQ7UUFDNUQsS0FBSztRQUNMTixXQUFVUyxJQUFJO1lBQ1osSUFBSVQsV0FDRkEsYUFBYSxnQ0FBZ0M7aUJBQzFDO2dCQUNILE9BQU9OLDZDQUFLQSxDQUFDLFdBQVc7b0JBQ3RCZ0IsYUFBYUMsS0FBS0MsU0FBUyxDQUFDSDtnQkFDOUI7WUFDRjtRQUNGO1FBQ0FJLFNBQVM7MkNBQUU7Z0JBQ1RmLFNBQVNnQixPQUFPO21EQUFDLENBQUNDO3dCQUNoQmQsT0FBT2UsaUJBQWlCLENBQUM7NEJBQ3ZCbEIsVUFBVTtnQ0FBQ2lCOzZCQUFNOzRCQUNqQlYsT0FBTzt3QkFDVDtvQkFDRjs7WUFDRjs7SUFDRjtBQUNGLEVBQUU7QUFFRixnQkFBZ0I7QUFDaEIsaURBQWlEO0FBQ2pELG1DQUFtQztBQUNuQyxpQ0FBaUM7QUFDakMsc0ZBQXNGO0FBQ3RGLDBFQUEwRTtBQUMxRSxLQUFLO0FBRUwsMEJBQTBCO0FBQzFCLHVDQUF1QztBQUV2Qzs7Ozs7OztDQU9DLEdBQ00sTUFBTVksdUJBQXVCLENBQUNyQjtJQUNuQyxNQUFNYSxPQUFPakIsdUVBQWdCQSxDQUFDO1FBQzVCMEIsU0FBUztZQUFFdEI7UUFBWTtRQUN2QnVCLE1BQU07MkRBQUUsQ0FBQ0M7Z0JBQ1AsT0FBTztvQkFDTGpCLFdBQVdpQixTQUFTQyxLQUFLLENBQUNsQixTQUFTO29CQUNuQ21CLFFBQVFGLFNBQVNDLEtBQUssQ0FBQ0MsTUFBTTtnQkFDL0I7WUFDRjs7SUFDRjtJQUVBLE1BQU1DLGtCQUFrQmQsSUFBSSxDQUFDQSxLQUFLZSxNQUFNLEdBQUcsRUFBRTtJQUM3QyxPQUFPO1FBQUVEO0lBQWdCO0FBQzNCLEVBQUUsQ0FFRixnQkFBZ0I7Q0FDaEIsb0VBQW9FO0NBQ3BFLCtEQUErRCIsInNvdXJjZXMiOlsiL2hvbWUvc2FoaWxkZXYvRGV2ZWxvcG1lbnQvUHJvamVjdHMvQXBvdHphL0FwcGxpY2F0aW9uL2hvb2tzL3VzZU11dGF0aW9uLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIE11dGF0aW9uRnVuY3Rpb24sXG4gIE11dGF0aW9uS2V5LFxuICBRdWVyeUtleSxcbiAgdXNlTXV0YXRpb24sXG4gIHVzZU11dGF0aW9uU3RhdGUsXG4gIHVzZVF1ZXJ5Q2xpZW50LFxufSBmcm9tIFwiQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5XCI7XG5pbXBvcnQgeyB0b2FzdCB9IGZyb20gXCJzb25uZXJcIjtcblxuZXhwb3J0IGNvbnN0IHVzZU11dGF0aW9uRGF0YSA9IChcbiAgbXV0YXRpb25LZXk6IE11dGF0aW9uS2V5LFxuICBtdXRhdGlvbkZuOiBNdXRhdGlvbkZ1bmN0aW9uPGFueSwgYW55PixcbiAgcXVlcnlLZXk6IFF1ZXJ5S2V5W10sIC8vIEp1c3QgYSBXb3JrYXJvdW5kIGZvciBub3cgV291bGQgQ2hhbmdlIC8gT3B0aW1pemUgaW4gRnV0dXJlXG4gIE9wdGltaXN0aWNGbj86IChwcmV2aW91c0RhdGE6IGFueSwgdmFyaWFibGVzOiBhbnkpID0+IHZvaWQsXG4gIG9uU3VjY2Vzcz86ICgpID0+IHZvaWRcbikgPT4ge1xuICAvLyBDcmVhdGluZyBhIHF1ZXJ5IGNsaWVudCBmb3IgTXV0YXRpb25cbiAgY29uc3QgY2xpZW50ID0gdXNlUXVlcnlDbGllbnQoKTtcbiAgcmV0dXJuIHVzZU11dGF0aW9uKHtcbiAgICBtdXRhdGlvbktleSxcbiAgICBtdXRhdGlvbkZuLFxuICAgIG9uTXV0YXRlOiBhc3luYyAodmFyaWFibGVzKSA9PiB7XG4gICAgICBhd2FpdCBjbGllbnQuY2FuY2VsUXVlcmllcyh7XG4gICAgICAgIHF1ZXJ5S2V5OiBxdWVyeUtleSxcbiAgICAgICAgZXhhY3Q6IHRydWUsXG4gICAgICB9KTtcbiAgICAgIC8vIE9wdGltaXN0aWMgdXBkYXRlIHRvIHRoZSBjYWNoZVxuICAgICAgY29uc3QgcHJldmlvdXNEYXRhID0gY2xpZW50LmdldFF1ZXJ5RGF0YShbcXVlcnlLZXlbMF1dKTtcbiAgICAgIGNsaWVudC5zZXRRdWVyeURhdGEoXG4gICAgICAgIFtxdWVyeUtleVswXV0sXG4gICAgICAgIE9wdGltaXN0aWNGblxuICAgICAgICAgID8gT3B0aW1pc3RpY0ZuKHByZXZpb3VzRGF0YSwgdmFyaWFibGVzKVxuICAgICAgICAgIDogKHByZXZpb3VzRGF0YTogYW55LCB2YXJpYWJsZXM6IGFueSkgPT4gKHtcbiAgICAgICAgICAgICAgLi4ucHJldmlvdXNEYXRhLFxuICAgICAgICAgICAgICAuLi52YXJpYWJsZXMsXG4gICAgICAgICAgICB9KVxuICAgICAgKTtcbiAgICAgIHJldHVybiB7IHZhcmlhYmxlcywgcHJldmlvdXNEYXRhIH07XG4gICAgfSxcblxuICAgIC8vIG9uRXJyb3I6IChlcnJvciwgdmFyaWFibGVzLCBjb250ZXh0KSA9PiB7XG4gICAgLy8gICBjbGllbnQuc2V0UXVlcnlEYXRhKFtxdWVyeUtleV0sIGNvbnRleHQ/LnByZXZpb3VzRGF0YSk7XG4gICAgLy8gfSxcbiAgICBvblN1Y2Nlc3MoZGF0YSkge1xuICAgICAgaWYgKG9uU3VjY2VzcylcbiAgICAgICAgb25TdWNjZXNzKCk7IC8vIENhbGxpbmcgb25TdWNjZXNzIGlmIHByb3ZpZGVkXG4gICAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRvYXN0KFwiU3VjY2Vzc1wiLCB7XG4gICAgICAgICAgZGVzY3JpcHRpb246IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIG9uU2V0dGxlZDogKCkgPT4ge1xuICAgICAgcXVlcnlLZXkuZm9yRWFjaCgocXVlcnkpID0+IHtcbiAgICAgICAgY2xpZW50LmludmFsaWRhdGVRdWVyaWVzKHtcbiAgICAgICAgICBxdWVyeUtleTogW3F1ZXJ5XSxcbiAgICAgICAgICBleGFjdDogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9LFxuICB9KTtcbn07XG5cbi8vIEV4YW1wbGUgdXNhZ2Vcbi8vIGNvbnN0IHsgbXV0YXRlLCBpc1BlbmRpbmcgfSA9IHVzZU11dGF0aW9uRGF0YShcbi8vICAgW1widXBkYXRlVXNlclwiXSwgLy8gbXV0YXRpb25LZXlcbi8vICAgdXBkYXRlVXNlckFwaSwgLy8gbXV0YXRpb25GblxuLy8gICBcInVzZXJEYXRhXCIsIC8vIHF1ZXJ5S2V5IHRvIGludmFsaWRhdGUgIGkuZS4gZm9yY2luZyB0aGUgYSByZWZldGNoIHRvIHVzZURhdGEgaG9va1xuLy8gICAoKSA9PiBjb25zb2xlLmxvZyhcIlVzZXIgdXBkYXRlZCBzdWNjZXNzZnVsbHkhXCIpIC8vIG9uU3VjY2VzcyBjYWxsYmFja1xuLy8gKTtcblxuLy8gLy8gVHJpZ2dlciB0aGUgbXV0YXRpb25cbi8vIG11dGF0ZSh7IGlkOiAxLCBuYW1lOiBcIkpvaG4gRG9lXCIgfSk7XG5cbi8qKlxuICogdXNlTXV0YXRpb25EYXRhU3RhdGVcbiAqXG4gKiBUaGlzIGhvb2sgd2lsbCByZXR1cm4gdGhlIGxhdGVzdCB2YXJpYWJsZXMgYW5kIHN0YXR1cyBvZiB0aGUgZ2l2ZW4gbXV0YXRpb24ga2V5LlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBtdXRhdGlvbktleSAtIFRoZSBrZXkgb2YgdGhlIG11dGF0aW9uIHRvIG1vbml0b3JcbiAqIEByZXR1cm5zIHtPYmplY3R9IC0gQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGxhdGVzdCB2YXJpYWJsZXMgYW5kIHN0YXR1cyBvZiB0aGUgbXV0YXRpb25cbiAqL1xuZXhwb3J0IGNvbnN0IHVzZU11dGF0aW9uRGF0YVN0YXRlID0gKG11dGF0aW9uS2V5OiBNdXRhdGlvbktleSkgPT4ge1xuICBjb25zdCBkYXRhID0gdXNlTXV0YXRpb25TdGF0ZSh7XG4gICAgZmlsdGVyczogeyBtdXRhdGlvbktleSB9LFxuICAgIHNlbGVjdDogKG11dGF0aW9uKSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB2YXJpYWJsZXM6IG11dGF0aW9uLnN0YXRlLnZhcmlhYmxlcyBhcyBhbnksXG4gICAgICAgIHN0YXR1czogbXV0YXRpb24uc3RhdGUuc3RhdHVzLFxuICAgICAgfTtcbiAgICB9LFxuICB9KTtcblxuICBjb25zdCBsYXRlc3RWYXJpYWJsZXMgPSBkYXRhW2RhdGEubGVuZ3RoIC0gMV07XG4gIHJldHVybiB7IGxhdGVzdFZhcmlhYmxlcyB9O1xufTtcblxuLy8gRXhhbXBsZSB1c2FnZVxuLy8gY29uc3QgeyBsYXRlc3RWYXJpYWJsZXMgfSA9IHVzZU11dGF0aW9uRGF0YVN0YXRlKFtcInVwZGF0ZVVzZXJcIl0pO1xuLy8gY29uc29sZS5sb2cobGF0ZXN0VmFyaWFibGVzKTsgLy8geyBpZDogMSwgbmFtZTogXCJKb2huIERvZVwiIH1cbiJdLCJuYW1lcyI6WyJ1c2VNdXRhdGlvbiIsInVzZU11dGF0aW9uU3RhdGUiLCJ1c2VRdWVyeUNsaWVudCIsInRvYXN0IiwidXNlTXV0YXRpb25EYXRhIiwibXV0YXRpb25LZXkiLCJtdXRhdGlvbkZuIiwicXVlcnlLZXkiLCJPcHRpbWlzdGljRm4iLCJvblN1Y2Nlc3MiLCJjbGllbnQiLCJvbk11dGF0ZSIsInZhcmlhYmxlcyIsImNhbmNlbFF1ZXJpZXMiLCJleGFjdCIsInByZXZpb3VzRGF0YSIsImdldFF1ZXJ5RGF0YSIsInNldFF1ZXJ5RGF0YSIsImRhdGEiLCJkZXNjcmlwdGlvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJvblNldHRsZWQiLCJmb3JFYWNoIiwicXVlcnkiLCJpbnZhbGlkYXRlUXVlcmllcyIsInVzZU11dGF0aW9uRGF0YVN0YXRlIiwiZmlsdGVycyIsInNlbGVjdCIsIm11dGF0aW9uIiwic3RhdGUiLCJzdGF0dXMiLCJsYXRlc3RWYXJpYWJsZXMiLCJsZW5ndGgiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useMutation.ts\n"));

/***/ })

});